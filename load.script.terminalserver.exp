#!/usr/bin/expect
#
# Apply to: QuantaMesh Network OS (QNOS)
# Build by: QCTUS SWFAE
# Purpose: This example access switch via console and download script and apply to running-config
# 


# initial vars (modify it to fit your environment)
set term_server_addr ts-01
set conport {2005 2007 2010 2011 2012 2013 2014 2015 2016}
# the script file name is $SWITCH.initial.scr (e.g., ly4a.initial.scr)
set SWITCH {ly4a lb9 ly2 leaf03 leaf04 leaf01 leaf02 spine01 spine02}
set tftpaddr 10.90.90.254
set username "admin"
set password "\r"
set enablepass "\r"
set PATH "/tmp/"

# vars
set global_prompt ") #$"
set config_prompt "Config)#$"

# put source file in same directory
source common.exp

log_file -noappend $PATH/load.script.terminalserver.log
log_user 1

####################SCRIPT START####################

for {set i 0} {$i < [llength $conport]} {incr i 1} {
	# enable logging to file and disable logging stdout
	set loginsession [lindex $conport $i]
	
####################AUTO LOGIN START####################
	spawn telnet $term_server_addr $loginsession
	set "con[lindex $conport $i]" $spawn_id
	# verify terminal server connected
	expect	{
		-re "Connected to port*" { send "\r" }
		timeout  { loggedline $loginsession "FAILED TO CONNECT TERMINAL SERVER! ABORTED!\n" ; exit }
	}

	con_login $username $password $enablepass $loginsession
	
####################AUTO LOGIN END####################
#        set spawn_id [set "con[lindex $conport $i]"]
	expect $global_prompt {send "copy tftp://$tftpaddr/[lindex $SWITCH $i].initial.scr script [lindex $SWITCH $i].initial.scr\r"}
	expect "want to start? (y/n)" {send "y"}
	sleep 1
	expect {
		"failed!" {
			loggedline $loginsession "download failed! ABORTED!\n"
			exit
			}
		"successfully." {
			loggedline $loginsession: "download succeed!\n"
			}
	}
	
	expect $global_prompt {send "script apply [lindex $SWITCH $i].initial.scr\r"}
	expect "apply the configuration script? (y/n)" {send "y"}
	expect {
		timeout {
			loggedline $loginsession: "TIMEOUT! ABORTED!\n"
			exit
		}	
		"applied" {
			loggedline $loginsession: "script is applied\n"
		}
		"save them now? (y/n)" {
			send "n"
		}
	}
	send "\r\n"
	expect $global_prompt {send "copy running-config startup-config\r"}
	expect {
		timeout {
			loggedline $loginsession: "TIMEOUT! ABORTED!\n"
			exit
		}
		"Configuration Saved!" {loggedline $loginsession "configuration is saved.\n"}
		"(y/n)" {send "y"}
	}
}
	expect $global_prompt {loggedline "TASKS ARE FINISHED.\n"}
	
	# turn off logging
	log_file

####################SCRIPT END####################
